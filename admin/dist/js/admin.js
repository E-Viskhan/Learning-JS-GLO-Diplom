(()=>{"use strict";const e=async e=>{try{const t=await fetch(e);if(!t.ok)throw new Error("Произошла ошибка, данных нет!");return await t.json()}catch(e){console.error(e.message)}},t=async({url:e,data:t,method:n="POST"})=>{try{if(!(await fetch(e,{method:n,headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok)throw new Error("Произошла ошибка, данных нет!")}catch(e){console.error(e.message)}},n="http://localhost:3000/services/",c=e=>{const t=document.getElementById("tbody");t.innerHTML="",e.forEach((e=>{const n=(({type:e,name:t,units:n,cost:c,id:o})=>`<tr class="table__row">\n    <td class="table__id table__cell">${o}</td>\n    <td class="table-type table__cell">${e}</td>\n    <td class="table-name table__cell">${t}</td>\n    <td class="table-units table__cell">${n}</td>\n    <td class="table-cost table__cell">${c} руб</td>\n    <td>\n      <div class="table__actions table__cell">\n        <button class="button action-change">\n          <span class="svg_ui">\n            <svg class="action-icon_change">\n              <use xlink:href="./img/sprite.svg#change"></use>\n            </svg>\n          </span>\n          <span>Изменить</span>\n        </button>\n        <button class="button action-remove">\n          <span class="svg_ui">\n            <svg class="action-icon_remove">\n              <use xlink:href="./img/sprite.svg#remove"></use>\n            </svg>\n          </span>\n          <span>Удалить</span>\n        </button>\n      </div>\n    </td>\n  </tr>`)(e);t.insertAdjacentHTML("beforeend",n)}))},o=()=>{apiService.getServices().then((e=>c(e)))},s=()=>{document.body.style.marginRight=`${(()=>{let e=0;if(Math.max(document.body.scrollHeight,document.documentElement.scrollHeight,document.body.offsetHeight,document.documentElement.offsetHeight,document.body.clientHeight,document.documentElement.clientHeight)>document.documentElement.clientHeight){let t=document.createElement("div");t.style.width="500px",t.style.height="500px",t.style.overflowY="scroll",t.style.visibility="hidden",document.body.appendChild(t),e=t.offsetWidth-t.clientWidth,t.remove()}return e})()}px`,document.body.style.overflow="hidden"},a=()=>{document.getElementById("modal").classList.toggle("d-none")};"true"!==(e=>{let t=document.cookie.match(new RegExp("(?:^|; )"+"access".replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,"\\$1")+"=([^;]*)"));return t?decodeURIComponent(t[1]):void 0})()&&(document.location.href="index.html"),window.apiService=new class{async getServices(){return e(n)}async getService(t){return e(n+t)}async addService(e){return t({url:n,data:e})}async removeService(e){return t({url:n+e,method:"DELETE"})}async changeService(e,c){return t({url:n+e,data:c,method:"PATCH"})}async replaceService(e,c){return t({url:n+e,data:c,method:"PUT"})}async filterServices(t){return e(`${n}?type=${t}`)}async getSortServices({sortOptionName:t,order:n}){return e(`http://localhost:4545/users?_sort=${t}&_order=${n}`)}async getSearchUsers(t){return e(`http://localhost:4545/users?name_like=${t}`)}},apiService.getServices().then((e=>c(e))),(async()=>{const e=document.getElementById("typeItem");(await(async()=>fetch("http://localhost:3000/services/").then((e=>e.json())).then((e=>{const t=new Set;return e.forEach((e=>t.add(e.type))),t})))()).forEach((t=>{const n=`<option value="${c=t}">${c}</option>`;var c;e.insertAdjacentHTML("beforeend",n)}))})(),(()=>{const e=document.getElementById("modal"),t=document.getElementById("form"),n=()=>{t.reset(),t.removeAttribute("data-service-id"),t.removeAttribute("data-method"),a(),document.body.style.marginRight="0",document.body.style.overflow="auto"};e.addEventListener("click",(e=>{e.preventDefault();const c=e.target;if(c.classList.contains("modal__overlay")||c.closest(".button__close")||c.closest(".cancel-button"))n();else if(c.closest("#submit")){const e=new FormData(t);let c={};for(let[t,n]of e)c[t]=n;switch(t.dataset.method){case"add":apiService.addService(c).then((()=>o()));break;case"change":const e=t.dataset.serviceId;apiService.changeService(e,c).then((()=>o()))}n()}}))})(),(()=>{const e=document.getElementById("typeItem");e.addEventListener("change",(async t=>{let n,o=e.value;n="Все услуги"===o?await apiService.getServices():await apiService.filterServices(o),c(n)}))})(),(()=>{const e=document.querySelector(".btn-addItem"),t=document.getElementById("form");document.querySelector(".modal__header").textContent="Добавение новой услуги",e.addEventListener("click",(e=>{t.dataset.method="add",a(),s()}))})(),document.getElementById("tbody").addEventListener("click",(e=>{const t=e.target;if(t.closest(".action-change")){const e=document.querySelector(".modal__header"),n=document.getElementById("form"),c=n.querySelector("#type"),o=n.querySelector("#name"),r=n.querySelector("#cost"),l=n.querySelector("#units"),d=t.closest("tr").querySelector(".table__id").textContent;e.textContent="Редактировать услугу",apiService.getService(d).then((e=>{c.value=e.type,o.value=e.name,r.value=e.cost,l.value=e.units})),a(),s(),n.dataset.method="change",n.dataset.serviceId=d}})),document.getElementById("tbody").addEventListener("click",(e=>{const t=e.target;if(e.target.closest(".action-remove")){const e=t.closest("tr").querySelector(".table__id").textContent;apiService.removeService(e).then((()=>o()))}})),document.querySelector("thead").addEventListener("click",(e=>{const t=e.target;console.log(t.closest(".table-th")),t.closest(".action-change")}))})();